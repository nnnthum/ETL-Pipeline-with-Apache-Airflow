version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.6.3
  environment:
    - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg  # âœ… Mount airflow.cfg
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    image: postgres:12
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: always

  redis:
    image: redis:latest
    container_name: airflow_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - >
        airflow db init &&
        airflow db upgrade &&
        airflow users create \
          --role Admin \
          --username admin \
          --password admin \
          --email admin@airflow.com \
          --firstname Admin \
          --lastname User &&
        cp /opt/airflow/airflow.cfg /home/airflow/airflow.cfg
    volumes:
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: airflow webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: airflow scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always

  airflow-worker:
    <<: *airflow-common
    container_name: airflow_worker
    command: airflow celery worker
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always